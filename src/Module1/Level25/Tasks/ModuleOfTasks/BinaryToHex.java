package Module1.Level25.Tasks.ModuleOfTasks;

import java.util.regex.Pattern;
import java.lang.StringBuilder;

/**
 * Публичный статический метод toHex(String) должен переводить строковое представление двоичного числа,
 * полученное в качестве входящего параметра, из двоичной системы счисления в шестнадцатеричную
 * и возвращать его строковое представление.
 * А публичный статический метод toBinary(String) наоборот — из строкового представления шестнадцатеричного
 * числа в строковое представление двоичного числа.
 * -----
 * Условия:
 * > Если входящий параметр — пустая строка или null, то оба метода возвращают пустую строку.
 * > Если входящий параметр метода toHex(String) содержит любой символ, кроме 0 или 1,
 *   то метод возвращает пустую строку.
 * > Если входящий параметр метода toBinary(String) содержит любой символ, кроме цифр от 0 до 9
 *   или латинскую букву от a до f (в нижнем регистре), то метод возвращает пустую строку.
 * -----
 * Один из алгоритмов перевода Binary --> Hex
 *  1. Проверяем длину строки, полученной входящим параметром. Она должна быть кратна 4.
 *  2. Если это не так, то добавляем нужное количество 0 в начало строки.
 *  3. Берем каждые четыре символа (бита) и проверяем, какому символу шестнадцатеричной кодировки он соответствует.
 * Например:
 * -----
 * двоичное представление — "100111010000", где "1001" — "9", "1101" — "d", "0000" — "0",
 * шестнадцатеричное представление — "9d0".
 *  -----
 * Один из алгоритмов перевода Hex --> Binary:
 *  - Берем каждый символ и проверяем какому двоичному числу (4 бита) он соответствует.
 * -----
 * Например:
 * -----
 * шестнадцатеричное представление — "9d0", где "9" — "1001", "d" — "1101", "0" — "0000",
 * двоичное представление — "100111010000".
 * -----
 * Требования:
 * • Нужно, чтобы метод toHex(String) был реализован согласно условию.
 * • Нужно, чтобы метод toBinary(String) был реализован согласно условию.
 * • Методы Integer.toBinaryString(int) и Long.toBinaryString(int) использовать нельзя.
 * • Методы Integer.toHexString(int) и Long.toHexString(int) использовать нельзя.
 * • Методы Integer.parseInt(String, int) и Long.parseLong(String, int) использовать нельзя.
 * • Методы Integer.toString(int, int) и Long.toString(long, int) использовать нельзя.
 * • Объект типа BigInteger использовать нельзя.
 * • Объект типа BigDecimal использовать нельзя.
 */

public class BinaryToHex {
    public static void main(String[] args) {
        String binaryNumber = "100111010000";
        System.out.println("Двоичное число " + binaryNumber + " равно шестнадцатеричному числу " + toHex(binaryNumber));
        String hexNumber = "9d0";
        System.out.println("Шестнадцатеричное число " + hexNumber + " равно двоичному числу " + toBinary(hexNumber));
    }

    /**
     * Метод переводит строковое представление двоичного числа,
     * полученное в качестве входящего параметра, из двоичной системы счисления в шестнадцатеричную
     * и возвращает его строковое представление
     * @param binaryNumber - строковое представление двоичного числа
     * @return - строковое представление шестнадцатеричного числа
     */
//    public static String toHex(String binaryNumber) {
//        String hexNumber = "";
//
//        if (binaryNumber == null) {
//            return hexNumber;
//        }
//        StringBuilder stringBuilder = new StringBuilder(binaryNumber);
//
////        if (binaryNumber.length() % 4 != 0) {
////
////        }
//    }

    /**
     * Метод переводит строкового представления шестнадцатеричного
     * числа в строковое представление двоичного числа
     * @param hexNumber - строкового представления шестнадцатеричного числа
     * @return - строковое представление двоичного числа
     */
//    public static String toBinary(String hexNumber) {
//
//    }
}


























