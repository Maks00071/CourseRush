package Module1;

import org.w3c.dom.ls.LSOutput;

import java.util.Arrays;

/*
* Массив — это контейнер элементов (Их еще называют таблицами).
* Если раньше мы сравнивали переменную с коробкой (где можно хранить какое-нибудь значение),
* то массив — это скорее коробка, разделенная внутри на секции.
* У каждой секции в «коробке-массиве» есть ее номер. Нумерация, конечно же, с нуля...
* Ну или можно провести еще одну аналогию. Давайте сравним обычный жилой дом и многоэтажку.
* Обычный дом занимает одна семья, а многоэтажка разбита на квартиры.
* Чтобы написать письмо семье, которая живет в обычном доме, надо указать его уникальный адрес.
* А чтобы написать письмо семье, которая живет в квартире, надо указать уникальный адрес дома
* и еще номер квартиры.

Так вот, переменная-массив — это переменная-многоэтажка. В ней можно хранить не одно значение, а несколько.
* В такой переменной есть несколько квартир (ячеек), к каждой из которых можно обратиться
* по ее номеру (индексу).
* синтаксис:
*           int[] array = new int[100]; - целочисленный массив на 100 элементов
*           double[] array = new double[20]; - вещественный массив на 20 элементов
*
* Количество ячеек в массиве называют размером массива или длиной массива.
* А из-за способности хранить много значений массивы еще называют контейнерами.
* !Важный факт: размер контейнера массива нельзя изменить после создания!
* Можно создать новый, но длину уже созданного контейнера поменять нельзя!
* Если попробовать обратиться к ячейке массива по индексу, которого в массиве нет
* программа аварийно завершится с ошибкой "ArrayIndexOutOfBoundsException" — индекс за границами массива.
* "arrays.length" => длина массива (int)
* list = new String[10]; - Переменная list хранит ссылку на объект – массив строк из 10 элементов.
* Объявление многомерных массивов:
*       int[][] twoDimArray; //двумерный массив
*       String[][][] threeDimArray; //трёхмерный массив
*       double[][][][][] fiveDimArray; // пятимерный массив
* <Двумерный массив в Java> — это массив массивов, то есть в каждой его ячейке находится
* ссылка на некий массив. Но гораздо проще его представить в виде таблицы, у которой задано
* количество строк (первое измерение) и количество столбцов (второе измерение).
* Двумерный массив, у которого все строки имеют равное количество элементов, называется прямоугольным.
* Объявление двумерного массива:
*           int[][] twoDimArray = new int[3][4];
*/

public class Array {
    public static void main(String[] args) {
        // создадим массивы int и double размером 10
        int[] intArray = new int[10]; // по умолчанию массив = [0, 0, 0,..., 0]
        double[] doubleArray = new double[10];
        // заполним массив
        intArray[1] = 5; // положим во вторую ячейку 5
        intArray[5] = 2;
        intArray[3] = intArray[1] + intArray[5]; // можно и так
        System.out.println(Arrays.toString(intArray)); // [0, 5, 0, 7, 0, 2, 0, 0, 0, 0]

        // создадим шахматное поле (двумерный массив)
        String[][] chessBoard = new String[8][8];
        for (int i = 0; i < chessBoard.length; i++) {
            for (int j = 0; j < chessBoard[i].length; j++) {
                if ((i + j) % 2 == 0) {
                    chessBoard[i][j] = "W";
                } else {
                    chessBoard[i][j] = "B";
                }
            }
        }
        for (int i = 0; i < chessBoard.length; i++) {
            for (int j = 0; j < chessBoard[0].length; j++) {
                System.out.print(chessBoard[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println("---------------------------------");
        // А теперь давайте напишем метод для правильной нумерации ячеек не на языке массивов,
        // а на “шахматном” языке. Нижняя левая ячейка на доске называется А1,
        // в то время как в нашем массиве это — chessBoard[7][0].
        String[] letters = new String[]{"a", "b", "c", "d", "e", "f", "g", "h"};
        String[] numbers = new String[]{"8", "7", "6", "5", "4", "3", "2", "1"};

        for (int i = 0; i < chessBoard.length; i++) {
            for (int j = 0; j < chessBoard[0].length; j++) {
                if ((i + j) % 2 == 0) {
                    chessBoard[i][j] = "W";
                } else {
                    chessBoard[i][j] = "B";
                }
                System.out.print(chessBoard[i][j] + letters[j] + numbers[i] + " ");
            }
            System.out.println();
        }
    }
}

