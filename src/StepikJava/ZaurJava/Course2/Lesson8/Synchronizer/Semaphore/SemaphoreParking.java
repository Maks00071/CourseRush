package StepikJava.ZaurJava.Course2.Lesson8.Synchronizer.Semaphore;

import java.util.concurrent.Semaphore;


public class SemaphoreParking {

    //Парковочное место занято - true, свободно - false
    public static final boolean[] PARKING_PLACES = new boolean[5]; // паркинг на 5-ть машин
    //Устанавливаем флаг "true", в таком случае метод
    //aсquire() будет раздавать разрешения в порядке очереди
    public static final Semaphore SEMAPHORE = new Semaphore(5, true);

    public static void main(String[] args) throws InterruptedException {
        for (int i = 1; i <= 7; i++) {
            new Thread(new Car(i)).start();
            Thread.sleep(400);
        }

        /*
        Автомобиль №1 подъехал к парковке.
        Автомобиль №1 припарковался на месте №0.
        Автомобиль №2 подъехал к парковке.
        Автомобиль №2 припарковался на месте №1.
        Автомобиль №3 подъехал к парковке.
        Автомобиль №3 припарковался на месте №2.
        Автомобиль №4 подъехал к парковке.
        Автомобиль №4 припарковался на месте №3.
        Автомобиль №5 подъехал к парковке.
        Автомобиль №5 припарковался на месте №4.
        Автомобиль №6 подъехал к парковке.
        Автомобиль №7 подъехал к парковке.
        Автомобиль №1 покинул парковку.
        Автомобиль №6 припарковался на месте №0.
        Автомобиль №2 покинул парковку.
        Автомобиль №7 припарковался на месте №1.
        Автомобиль №3 покинул парковку.
        Автомобиль №4 покинул парковку.
        Автомобиль №5 покинул парковку.
        Автомобиль №6 покинул парковку.
        Автомобиль №7 покинул парковку.
         */
    }

}
